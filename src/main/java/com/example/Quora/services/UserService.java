package com.example.Quora.services;import com.example.Quora.models.User;import com.example.Quora.repository.UserRepository;import java.util.Optional;public class UserService {    private final UserRepository userRepository;    public UserService(UserRepository userRepository) {        this.userRepository = userRepository;    }    public User register(User userData){        try{            return userRepository.save(userData);        }        catch(Exception e){            System.out.println(e.getMessage());            return  null;        }    }    public User login(User userData){        try{            User user = null;            return user;        }        catch(Exception e){            System.out.println(e.getMessage());            return  null;        }    }    public Optional<User> findById(Long id){        try{            return userRepository.findById(id);        }        catch(Exception e){            System.out.println(e.getMessage());            return  null;        }    }    public User updateUser(Long id,User userData){        try{            Optional<User> user= userRepository.findById(id);            if (user.isEmpty()){                throw  new RuntimeException("not user in db");            }                return userRepository.save(userData);        }        catch(Exception e){            System.out.println(e.getMessage());            return  null;        }    }}